/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.test.avro_study.model;  
@SuppressWarnings("all")
/** 注释：我的文件,包含别名 */
@org.apache.avro.specific.AvroGenerated
public class MyFile extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MyFile\",\"namespace\":\"com.test.avro_study.model\",\"doc\":\"注释：我的文件,包含别名\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"文件名字\",\"default\":\"\",\"order\":\"ignore\",\"aliases\":[\"f_n1\",\"f_n2\"]},{\"name\":\"path\",\"type\":\"string\",\"doc\":\"文件路径\",\"default\":\"\",\"aliases\":[\"filePath\"]},{\"name\":\"length\",\"type\":\"int\",\"doc\":\"文件长度\",\"default\":0},{\"name\":\"isEmpty\",\"type\":\"boolean\",\"doc\":\"文件是否为空\",\"default\":false},{\"name\":\"createTime\",\"type\":\"string\",\"doc\":\"文件创建时间\"}],\"alias\":[\"f1\",\"f2\",\"f3\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 文件名字 */
  @Deprecated public java.lang.CharSequence name;
  /** 文件路径 */
  @Deprecated public java.lang.CharSequence path;
  /** 文件长度 */
  @Deprecated public int length;
  /** 文件是否为空 */
  @Deprecated public boolean isEmpty;
  /** 文件创建时间 */
  @Deprecated public java.lang.CharSequence createTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MyFile() {}

  /**
   * All-args constructor.
   */
  public MyFile(java.lang.CharSequence name, java.lang.CharSequence path, java.lang.Integer length, java.lang.Boolean isEmpty, java.lang.CharSequence createTime) {
    this.name = name;
    this.path = path;
    this.length = length;
    this.isEmpty = isEmpty;
    this.createTime = createTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return path;
    case 2: return length;
    case 3: return isEmpty;
    case 4: return createTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: path = (java.lang.CharSequence)value$; break;
    case 2: length = (java.lang.Integer)value$; break;
    case 3: isEmpty = (java.lang.Boolean)value$; break;
    case 4: createTime = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * 文件名字   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * 文件名字   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'path' field.
   * 文件路径   */
  public java.lang.CharSequence getPath() {
    return path;
  }

  /**
   * Sets the value of the 'path' field.
   * 文件路径   * @param value the value to set.
   */
  public void setPath(java.lang.CharSequence value) {
    this.path = value;
  }

  /**
   * Gets the value of the 'length' field.
   * 文件长度   */
  public java.lang.Integer getLength() {
    return length;
  }

  /**
   * Sets the value of the 'length' field.
   * 文件长度   * @param value the value to set.
   */
  public void setLength(java.lang.Integer value) {
    this.length = value;
  }

  /**
   * Gets the value of the 'isEmpty' field.
   * 文件是否为空   */
  public java.lang.Boolean getIsEmpty() {
    return isEmpty;
  }

  /**
   * Sets the value of the 'isEmpty' field.
   * 文件是否为空   * @param value the value to set.
   */
  public void setIsEmpty(java.lang.Boolean value) {
    this.isEmpty = value;
  }

  /**
   * Gets the value of the 'createTime' field.
   * 文件创建时间   */
  public java.lang.CharSequence getCreateTime() {
    return createTime;
  }

  /**
   * Sets the value of the 'createTime' field.
   * 文件创建时间   * @param value the value to set.
   */
  public void setCreateTime(java.lang.CharSequence value) {
    this.createTime = value;
  }

  /** Creates a new MyFile RecordBuilder */
  public static com.test.avro_study.model.MyFile.Builder newBuilder() {
    return new com.test.avro_study.model.MyFile.Builder();
  }
  
  /** Creates a new MyFile RecordBuilder by copying an existing Builder */
  public static com.test.avro_study.model.MyFile.Builder newBuilder(com.test.avro_study.model.MyFile.Builder other) {
    return new com.test.avro_study.model.MyFile.Builder(other);
  }
  
  /** Creates a new MyFile RecordBuilder by copying an existing MyFile instance */
  public static com.test.avro_study.model.MyFile.Builder newBuilder(com.test.avro_study.model.MyFile other) {
    return new com.test.avro_study.model.MyFile.Builder(other);
  }
  
  /**
   * RecordBuilder for MyFile instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MyFile>
    implements org.apache.avro.data.RecordBuilder<MyFile> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence path;
    private int length;
    private boolean isEmpty;
    private java.lang.CharSequence createTime;

    /** Creates a new Builder */
    private Builder() {
      super(com.test.avro_study.model.MyFile.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.test.avro_study.model.MyFile.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.path)) {
        this.path = data().deepCopy(fields()[1].schema(), other.path);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.length)) {
        this.length = data().deepCopy(fields()[2].schema(), other.length);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isEmpty)) {
        this.isEmpty = data().deepCopy(fields()[3].schema(), other.isEmpty);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.createTime)) {
        this.createTime = data().deepCopy(fields()[4].schema(), other.createTime);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MyFile instance */
    private Builder(com.test.avro_study.model.MyFile other) {
            super(com.test.avro_study.model.MyFile.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.path)) {
        this.path = data().deepCopy(fields()[1].schema(), other.path);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.length)) {
        this.length = data().deepCopy(fields()[2].schema(), other.length);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isEmpty)) {
        this.isEmpty = data().deepCopy(fields()[3].schema(), other.isEmpty);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.createTime)) {
        this.createTime = data().deepCopy(fields()[4].schema(), other.createTime);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.test.avro_study.model.MyFile.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public com.test.avro_study.model.MyFile.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'path' field */
    public java.lang.CharSequence getPath() {
      return path;
    }
    
    /** Sets the value of the 'path' field */
    public com.test.avro_study.model.MyFile.Builder setPath(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.path = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'path' field has been set */
    public boolean hasPath() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'path' field */
    public com.test.avro_study.model.MyFile.Builder clearPath() {
      path = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'length' field */
    public java.lang.Integer getLength() {
      return length;
    }
    
    /** Sets the value of the 'length' field */
    public com.test.avro_study.model.MyFile.Builder setLength(int value) {
      validate(fields()[2], value);
      this.length = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'length' field has been set */
    public boolean hasLength() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'length' field */
    public com.test.avro_study.model.MyFile.Builder clearLength() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'isEmpty' field */
    public java.lang.Boolean getIsEmpty() {
      return isEmpty;
    }
    
    /** Sets the value of the 'isEmpty' field */
    public com.test.avro_study.model.MyFile.Builder setIsEmpty(boolean value) {
      validate(fields()[3], value);
      this.isEmpty = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'isEmpty' field has been set */
    public boolean hasIsEmpty() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'isEmpty' field */
    public com.test.avro_study.model.MyFile.Builder clearIsEmpty() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'createTime' field */
    public java.lang.CharSequence getCreateTime() {
      return createTime;
    }
    
    /** Sets the value of the 'createTime' field */
    public com.test.avro_study.model.MyFile.Builder setCreateTime(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.createTime = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'createTime' field has been set */
    public boolean hasCreateTime() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'createTime' field */
    public com.test.avro_study.model.MyFile.Builder clearCreateTime() {
      createTime = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public MyFile build() {
      try {
        MyFile record = new MyFile();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.path = fieldSetFlags()[1] ? this.path : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.length = fieldSetFlags()[2] ? this.length : (java.lang.Integer) defaultValue(fields()[2]);
        record.isEmpty = fieldSetFlags()[3] ? this.isEmpty : (java.lang.Boolean) defaultValue(fields()[3]);
        record.createTime = fieldSetFlags()[4] ? this.createTime : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
